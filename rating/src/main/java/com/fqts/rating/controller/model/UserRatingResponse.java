/*
 * Rating Service
 * This is the API documentation for the Rating Service, which is part of a microservices-based Rating Application.  This service allows users to add and retrieve ratings for companies, including user-specific and company-specific ratings. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.fqts.rating.controller.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Schema representing the response for all ratings submitted by a specific user, along with user details. 
 */
@Schema(description = "Schema representing the response for all ratings submitted by a specific user, along with user details. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-02-01T09:34:38.541185546Z[GMT]")

public class UserRatingResponse {
  @SerializedName("userId")
  private Integer userId = null;

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("ratings")
  private List<Ratings> ratings = null;

  public UserRatingResponse userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The unique identifier of the user.
   * @return userId
  **/
  @Schema(description = "The unique identifier of the user.")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public UserRatingResponse userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * The full name of the user.
   * @return userName
  **/
  @Schema(description = "The full name of the user.")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public UserRatingResponse email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email address of the user.
   * @return email
  **/
  @Schema(description = "The email address of the user.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserRatingResponse ratings(List<Ratings> ratings) {
    this.ratings = ratings;
    return this;
  }

  public UserRatingResponse addRatingsItem(Ratings ratingsItem) {
    if (this.ratings == null) {
      this.ratings = new ArrayList<Ratings>();
    }
    this.ratings.add(ratingsItem);
    return this;
  }

   /**
   * A list of all ratings submitted by the user.
   * @return ratings
  **/
  @Schema(description = "A list of all ratings submitted by the user.")
  public List<Ratings> getRatings() {
    return ratings;
  }

  public void setRatings(List<Ratings> ratings) {
    this.ratings = ratings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRatingResponse userRatingResponse = (UserRatingResponse) o;
    return Objects.equals(this.userId, userRatingResponse.userId) &&
        Objects.equals(this.userName, userRatingResponse.userName) &&
        Objects.equals(this.email, userRatingResponse.email) &&
        Objects.equals(this.ratings, userRatingResponse.ratings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, userName, email, ratings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRatingResponse {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    ratings: ").append(toIndentedString(ratings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
